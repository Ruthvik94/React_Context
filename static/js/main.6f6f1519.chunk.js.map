{"version":3,"sources":["Components/Dropdown.js","Components/Delete.js","Components/TextField.js","Components/Checkbox.js","Components/Table.js","Components/Context.js","Components/HomePage.js","Components/AboutPage.js","Components/ServicePage.js","Components/ContractPage.js","Components/NotFound.js","App.js","index.js"],"names":["Dropdrown","update","addDropdown","dropdownValues","key","item","useState","data","setData","value","setValue","textField","useRef","useEffect","console","log","filter","i","removed","localCopy","push","sort","current","focus","Autocomplete","id","options","inputValue","getOptionLabel","option","style","width","onChange","evt","filtered","renderInput","params","TextField","label","variant","inputRef","press","IconButton","color","aria-label","onClick","Delete","checkInput","parseInt","Promise","resolve","Textfield","helper","setHelper","error","setError","helperText","type","a","target","message","bool","reset","toString","CheckBox","checked","change","row","skey","Checkbox","Table","context","setIndex","index","rows","setRows","checkSelection","useCallback","updatedRows","map","recommend","isKey","mandatory","columns","field","headerName","flex","renderCell","editable","currentTarget","parentNode","getAttribute","_","updated","display","height","pageSize","disableSelectionOnClick","Contet","setContext","Container","App","path","component","HomePage","AboutPage","ServicePage","ContractPage","NotFound","exact","Context","to","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6f6f1519.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\n\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nexport default function Dropdrown({ update, addDropdown }) {\r\n  const dropdownValues = [\r\n    { key: 1, item: \"React\" },\r\n    { key: 2, item: \"Vue\" },\r\n    { key: 3, item: \"Angular\" },\r\n    { key: 4, item: \"Svelte\" },\r\n  ];\r\n\r\n  const [data, setData] = useState(dropdownValues);\r\n\r\n  const [value, setValue] = useState(\"\");\r\n  const textField = useRef();\r\n\r\n  useEffect(() => {\r\n    if (addDropdown) {\r\n      console.log(typeof addDropdown.key, typeof dropdownValues[0].key);\r\n      const [removed] = dropdownValues.filter((i) => i.key === addDropdown.key);\r\n      const localCopy = [...data];\r\n      localCopy.push(removed);\r\n      localCopy.sort(({ key: a }, { key: b }) => a - b);\r\n      setData(localCopy);\r\n    }\r\n\r\n    textField.current.focus();\r\n  }, [addDropdown]);\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"combo-box-demo\"\r\n      options={data}\r\n      inputValue={value}\r\n      getOptionLabel={(option) => option.item}\r\n      style={{ width: 300 }}\r\n      onChange={(evt, value) => {\r\n        update(value);\r\n        const filtered = data.filter((item) => item.key !== value.key);\r\n        setData(filtered);\r\n        setValue(\"\");\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Context Name\"\r\n          variant=\"outlined\"\r\n          inputRef={textField}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n","import { IconButton } from \"@material-ui/core\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nexport default function ({ press }) {\r\n  return (\r\n    <IconButton color=\"secondary\" aria-label=\"delete\" onClick={press}>\r\n      <Delete />\r\n    </IconButton>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nconst checkInput = (value) => {\r\n  value = parseInt(value, 10);\r\n  return new Promise((resolve) => {\r\n    if (value < 1000) {\r\n      resolve([\"Value should be above 1000\", true, value]);\r\n    } else if (value > 10000) {\r\n      resolve([\"Upper Limit Reached\", true, 1000]);\r\n    } else {\r\n      resolve([\"\", false, value]);\r\n    }\r\n  });\r\n};\r\n\r\nexport default function Textfield() {\r\n  const [value, setValue] = useState(1000);\r\n  const [helper, setHelper] = useState();\r\n  const [error, setError] = useState(null);\r\n  return (\r\n    <TextField\r\n      error={error}\r\n      value={value}\r\n      id=\"standard-error-helper-text\"\r\n      helperText={helper}\r\n      type=\"number\"\r\n      onChange={async (evt) => {\r\n        const [message, bool, reset] = await checkInput(evt.target.value);\r\n        setValue(reset.toString());\r\n        setError(bool);\r\n        setHelper(message);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\n\r\nexport default function CheckBox({ checked, change, row, skey }) {\r\n  // const [selected, setSelected] = useState(checked);\r\n\r\n  return (\r\n    <Checkbox\r\n      checked={checked}\r\n      onChange={() => {\r\n        change(row, skey, checked);\r\n      }}\r\n      color=\"primary\"\r\n    />\r\n  );\r\n}\r\n\r\n/* export function CheckBoxLeft({ checked }) {\r\n  const [selected, setSelected] = useState(checked);\r\n\r\n  return (\r\n    <Checkbox\r\n      onChange={() => setSelected(!selected)}\r\n      checked={selected}\r\n      color=\"primary\"\r\n    />\r\n  );\r\n}\r\nexport function CheckBoxMiddle({ checked }) {\r\n  const [selected, setSelected] = useState(checked);\r\n\r\n  return (\r\n    <Checkbox\r\n      onChange={() => setSelected(!selected)}\r\n      checked={selected}\r\n      color=\"primary\"\r\n    />\r\n  );\r\n}\r\nexport function CheckBoxRight({ checked }) {\r\n  const [selected, setSelected] = useState(checked);\r\n\r\n  return (\r\n    <Checkbox\r\n      onChange={() => setSelected(!selected)}\r\n      checked={selected}\r\n      color=\"primary\"\r\n    />\r\n  );\r\n} */\r\n","import { useState, useEffect, useCallback } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\n\r\nimport DeleteButton from \"./Delete\";\r\nimport Textfield from \"./TextField\";\r\nimport CheckBox from \"./Checkbox\";\r\n\r\nexport default function Table({ context, index: setIndex }) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const checkSelection = useCallback(\r\n    (row, key, checked) => {\r\n      const updatedRows = rows.map((item) => {\r\n        if (item.key === row.key) {\r\n          if (key === \"recommend\" && !checked) {\r\n            item.recommend = !checked;\r\n            item.isKey = checked;\r\n            item.mandatory = checked;\r\n          } else {\r\n            item[key] = !checked;\r\n          }\r\n        }\r\n\r\n        return item;\r\n      });\r\n\r\n      setRows(updatedRows);\r\n    },\r\n    [rows]\r\n  );\r\n\r\n  // const updated = useMemo(() => [...data], [context]);\r\n  const columns = [\r\n    { field: \"id\", headerName: \"Context\", width: 130 },\r\n    {\r\n      field: \"value\",\r\n      headerName: \"Context Value\",\r\n      flex: 1,\r\n      renderCell: Textfield,\r\n    },\r\n    {\r\n      field: \"isKey\",\r\n      headerName: \"Is Key\",\r\n      renderCell: ({ row }) => {\r\n        return (\r\n          <CheckBox\r\n            checked={row.isKey}\r\n            change={checkSelection}\r\n            row={row}\r\n            skey=\"isKey\"\r\n          />\r\n        );\r\n      },\r\n      flex: 1,\r\n      type: \"boolean\",\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"mandatory\",\r\n      headerName: \"Mandatory\",\r\n      renderCell: ({ row }) => {\r\n        return (\r\n          <CheckBox\r\n            checked={row.mandatory}\r\n            change={checkSelection}\r\n            row={row}\r\n            skey=\"mandatory\"\r\n          />\r\n        );\r\n      },\r\n      flex: 1,\r\n      type: \"boolean\",\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"recommend\",\r\n      headerName: \"Recommended\",\r\n      renderCell: ({ row }) => {\r\n        return (\r\n          <CheckBox\r\n            checked={row.recommend}\r\n            change={checkSelection}\r\n            row={row}\r\n            skey=\"recommend\"\r\n          />\r\n        );\r\n      },\r\n      flex: 1,\r\n      type: \"boolean\",\r\n      editable: true,\r\n    },\r\n    {\r\n      field: \"remove\",\r\n      headerName: \" \",\r\n      width: 100,\r\n      renderCell: () => (\r\n        <DeleteButton\r\n          press={(evt) => {\r\n            const index = parseInt(\r\n              evt.currentTarget.parentNode.getAttribute(\"data-rowindex\"),\r\n              10\r\n            );\r\n            const { key, id } = rows[index];\r\n            const filtered = rows.filter((_, i) => i !== index);\r\n\r\n            setRows(filtered);\r\n            setIndex({ key, id });\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (context) {\r\n      const updated = [...rows];\r\n      const { key, item } = context;\r\n      updated.push({\r\n        key,\r\n        id: item,\r\n        value: 1000,\r\n        isKey: true,\r\n        mandatory: true,\r\n        recommend: false,\r\n      });\r\n\r\n      setRows(updated);\r\n    }\r\n  }, [context]);\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", height: 400, width: \"100%\" }}>\r\n      <DataGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pageSize={5}\r\n        disableSelectionOnClick={true}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\n\r\nimport { Container } from \"@material-ui/core\";\r\nimport Dropdown from \"./Dropdown\";\r\nimport Table from \"./Table\";\r\n\r\nexport default function Contet() {\r\n  const [context, setContext] = useState(\"\");\r\n  const [index, setIndex] = useState(\"\");\r\n\r\n  return (\r\n    <Container>\r\n      <Dropdown update={setContext} addDropdown={index} />\r\n      <br />\r\n      <Table context={context} index={setIndex} />\r\n    </Container>\r\n  );\r\n}\r\n","export default function () {\r\n  return <h1>Home</h1>;\r\n}\r\n","export default function () {\r\n  return <h1>About</h1>;\r\n}\r\n","export default function () {\r\n  return <h1>Service</h1>;\r\n}\r\n","export default function () {\r\n  return <h1>Contract</h1>;\r\n}\r\n","export default function () {\r\n  return <h1>Not Found</h1>;\r\n}\r\n","import {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport Context from \"./Components/Context\";\r\nimport HomePage from \"./Components/HomePage\";\r\nimport AboutPage from \"./Components/AboutPage\";\r\nimport ServicePage from \"./Components/ServicePage\";\r\nimport ContractPage from \"./Components/ContractPage\";\r\nimport NotFound from \"./Components/NotFound\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/Home\" component={HomePage} />\r\n        <Route path=\"/About\" component={AboutPage} />\r\n        <Route path=\"/Service\" component={ServicePage} />\r\n        <Route path=\"/Contract\" component={ContractPage} />\r\n        <Route path=\"/Not-Found\" component={NotFound} />\r\n        <Route path=\"/\" exact component={Context} />\r\n        <Redirect to=\"/Not-Found\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n","import ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}